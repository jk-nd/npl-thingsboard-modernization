version: '3.8'
services:
  test-postgres:
    restart: always
    image: "postgres:14.13-alpine"
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: welcome123
      POSTGRES_MULTIPLE_DATABASES: "thingsboard_test,npl_engine_test"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-rabbitmq:
    image: rabbitmq:3.12-management-alpine
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - test_rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - test-network

  test-oidc-proxy:
    build:
      context: ./oidc-proxy
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      THINGSBOARD_URL: http://host.docker.internal:9091
      THINGSBOARD_JWT_SECRET: thingsboard
    depends_on:
      - test-postgres
    networks:
      - test-network

  test-engine:
    image: "ghcr.io/noumenadigital/images/engine:latest"
    ports:
      - "12001:12000"
      - "11001:11000"
      - "12401:12400"
      - "12701:12700"
    environment:
      ENGINE_DB_PASSWORD: "welcome123"
      ENGINE_DEV_MODE: "false"
      ENGINE_DB_URL: "jdbc:postgresql://test-postgres:5432/npl_engine_test"
      ENGINE_DB_USER: "postgres"
      ENGINE_ALLOWED_ISSUERS: "http://test-oidc-proxy:8080/realms/thingsboard"
    depends_on:
      test-postgres:
        condition: service_healthy
    networks:
      - test-network
    volumes:
      - ./api/src/main:/migrations
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:12000/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-read-model:
    image: "ghcr.io/noumenadigital/images/read-model:latest"
    ports:
      - "5556:5000"
    environment:
      READ_MODEL_PORT: "5000"
      READ_MODEL_DB_URL: "postgresql://postgraphile:secret@test-postgres:5432/npl_engine_test"
      READ_MODEL_DB_SCHEMA: "noumena"
      READ_MODEL_ALLOWED_ISSUERS: "http://test-oidc-proxy:8080/realms/thingsboard"
      READ_MODEL_ENGINE_HEALTH_ENDPOINT: "http://test-engine:12000/actuator/health"
      READ_MODEL_ENGINE_HEALTH_TIMEOUT_SECONDS: "60"
    depends_on:
      test-engine:
        condition: service_healthy
      test-postgres:
        condition: service_healthy
    networks:
      - test-network

  test-sync-service:
    build:
      context: ./sync-service
      dockerfile: Dockerfile
    environment:
      RABBITMQ_HOST: test-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: admin
      RABBITMQ_PASSWORD: admin123
      RABBITMQ_VHOST: /
      THINGSBOARD_URL: http://test-thingsboard:9090
      THINGSBOARD_USERNAME: tenant@thingsboard.org
      THINGSBOARD_PASSWORD: tenant
      NPL_ENGINE_URL: http://test-engine:12000
      NPL_TOKEN: ""
    depends_on:
      - test-rabbitmq
      - test-engine
    networks:
      - test-network

  test-thingsboard:
    restart: always
    image: "thingsboard/tb-node:3.4.4"
    ports:
      - "9091:8080"
      - "1884:1883"
      - "5689-5694:5683-5688/udp"
    environment:
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.PostgreSQLDialect"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://test-postgres:5432/thingsboard_test"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "welcome123"
      TB_SERVICE_ID: "tb-node"
      SECURITY_OAUTH2_ENABLED: "false"
      SECURITY_JWT_TOKEN_SIGNING_KEY: "thingsboardDefaultSigningKey"
      TB_APPS_RULE_ENGINE_ENABLED: "true"
      TB_APPS_WEB_ENABLED: "true"
      TB_TRANSPORT_HTTP_ENABLED: "true"
      TB_TRANSPORT_MQTT_ENABLED: "true"
    volumes:
      - test_tb_data:/data
      - ./docker/tb-node/conf:/config
    depends_on:
      test-postgres:
        condition: service_healthy
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'cat < /dev/null > /dev/tcp/127.0.0.1/8080'"]
      interval: 10s
      timeout: 5s
      retries: 30

  test-thingsboard-ui:
    image: "thingsboard/tb-web-ui:3.4.4"
    ports:
      - "8084:8090"
    environment:
      TB_HOST: "test-thingsboard"
      TB_PORT: "8080"
      TB_ENABLE_PROXY: "true"
    networks:
      - test-network

  test-npl-proxy:
    image: nginx:alpine
    container_name: test-thingsboard-npl-proxy
    restart: always
    ports:
      - "8085:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./frontend-overlay/dist/npl-modernization:/assets/overlay
    networks:
      - test-network
    depends_on:
      test-thingsboard:
        condition: service_healthy
      test-thingsboard-ui:
        condition: service_started

volumes:
  test_postgres_data:
  test_rabbitmq_data:
  test_tb_data:

networks:
  test-network:
    driver: bridge
