version: '3.0'
services:
  postgres:
    restart: always
    image: "postgres:14.13-alpine"
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: welcome123
      POSTGRES_MULTIPLE_DATABASES: "thingsboard,npl_engine"
    volumes:
      - ./thingsboard_postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    networks:
      - npl-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - npl-network

  oidc-proxy:
    build:
      context: ./oidc-proxy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      THINGSBOARD_URL: http://host.docker.internal:9090
      THINGSBOARD_JWT_SECRET: thingsboard
    depends_on:
      - postgres

  engine:
    image: "ghcr.io/noumenadigital/images/engine:latest"
    ports:
      - "11000:11000"
      - "12000:12000"
      - "12400:12400"
      - "12700:12700"
    environment:
      ENGINE_DB_PASSWORD: "welcome123"
      ENGINE_DEV_MODE: "false"
      ENGINE_DB_URL: "jdbc:postgresql://postgres:5432/npl_engine"
      ENGINE_DB_USER: "postgres"
      ENGINE_ALLOWED_ISSUERS: "http://oidc-proxy:8080/realms/thingsboard"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - npl-network
    volumes:
      - ./npl-modernization/api/src/main:/migrations
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:12000/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  read-model:
    image: "ghcr.io/noumenadigital/images/read-model:latest"
    ports:
      - "5001:5000"
    environment:
      READ_MODEL_PORT: "5000"
      READ_MODEL_DB_URL: "postgresql://postgraphile:secret@postgres:5432/npl_engine"
      READ_MODEL_DB_SCHEMA: "noumena"
      READ_MODEL_ALLOWED_ISSUERS: "http://oidc-proxy:8080/realms/thingsboard"
      READ_MODEL_ENGINE_HEALTH_ENDPOINT: "http://engine:12000/actuator/health"
      READ_MODEL_ENGINE_HEALTH_TIMEOUT_SECONDS: "60"
    depends_on:
      engine:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - npl-network

  sync-service:
    build:
      context: ./sync-service
      dockerfile: Dockerfile
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: admin
      RABBITMQ_PASSWORD: admin123
      RABBITMQ_VHOST: /
      THINGSBOARD_URL: http://mytb:9090
      THINGSBOARD_USERNAME: tenant@thingsboard.org
      THINGSBOARD_PASSWORD: tenant
      NPL_ENGINE_URL: http://engine:12000
      NPL_TOKEN: ""
    depends_on:
      - rabbitmq
      - engine
    networks:
      - npl-network

  mytb:
    restart: always
    image: "thingsboard/tb-postgres:3.4.4"
    ports:
      - "9090:8080"
      - "1883:1883"
      - "5683-5688:5683-5688/udp"
    environment:
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.PostgreSQLDialect"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/thingsboard"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "welcome123"
      INSTALL_TB: "true"
      LOAD_DEMO: "true"
      TB_SERVICE_ID: "tb-node"
    volumes:
      - tb-data:/data
      - tb-logs:/var/log/thingsboard
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - npl-network

  npl-proxy:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./npl-modernization/overlay:/usr/share/nginx/html/assets/overlay
    depends_on:
      - mytb
    networks:
      - npl-network

volumes:
  postgres_data:
  rabbitmq_data:
  tb-data:
  tb-logs:

networks:
  npl-network:
    driver: bridge
